const jwt = require('jsonwebtoken')
const User = require('../models/user')

// middleware callback function auth()
const auth = async function(req, res, next){        // to check if user is authenticated

    try{
        const token = req.header('Authorization').replace('Bearer ','')   //auth token comes from browser client
                                                                          // to remove 'Bearer '
        const decodedPayload  = jwt.verify(token, 'secret')  
     //   console.log(decodedPayload)
        const user = await User.findOne({_id: decodedPayload._id, 'tokens.token':token})

        if(!user){
            throw new Error()
        }
        req.token = token
        req.user = user
        next()                                      // to let move next function after auth()                         

    }catch(e){
        res.status(401).send({error: 'Please authenticate'})  // 401 Unauthorized

    }

}

/* 

*Bearer authentication* (also called token authentication) is an HTTP authentication scheme that involves security tokens 
called bearer tokens. The name “Bearer authentication” can be understood as “give access to the bearer of this token.” 
The bearer token is a cryptic string, usually generated by the server in response to a login request.
The client must send this token in the Authorization header when making requests to protected resources like,
Authorization: Bearer <token>
 */

module.exports = auth